Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> P LPAR vertex COMMA vertices RPAR
Rule 2     vertices -> NIL
Rule 3     vertices -> vertex CONS vertices
Rule 4     vertex -> V LPAR NUM COMMA content RPAR
Rule 5     content -> DO action THEN NUM
Rule 6     content -> DO action UNTIL cnd THEN NUM
Rule 7     content -> IF cnd THEN NUM ELSE NUM
Rule 8     content -> GOTO NUM
Rule 9     content -> END
Rule 10    action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR
Rule 11    action -> SAY LPAR STRING RPAR
Rule 12    action -> MOVETO LPAR NUM COMMA NUM RPAR
Rule 13    action -> LOCATE LPAR NUM COMMA NUM COMMA NUM RPAR
Rule 14    action -> MOVEABS LPAR NUM COMMA NUM COMMA NUM RPAR
Rule 15    action -> MOVEREL LPAR NUM COMMA NUM COMMA NUM RPAR
Rule 16    action -> TURNABS LPAR STRING COMMA NUM RPAR
Rule 17    action -> TURNREL LPAR NUM COMMA NUM RPAR
Rule 18    action -> FORWARD LPAR NUM COMMA NUM RPAR
Rule 19    action -> CHARGE LPAR NUM RPAR
Rule 20    action -> RECALIBRATE LPAR NUM RPAR
Rule 21    action -> SETLOCALIZATIONFIDELITY LPAR NUM RPAR
Rule 22    action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR
Rule 23    action -> DEADLINE LPAR NUM RPAR
Rule 24    cnd -> VISIBLE LPAR STRING RPAR
Rule 25    cnd -> STOP LPAR NUM COMMA STRING RPAR

Terminals, with rules where they appear

CHARGE               : 19
COMMA                : 1 4 10 10 10 10 12 13 13 14 14 15 15 16 17 18 22 22 22 25
CONS                 : 3
DEADLINE             : 23
DO                   : 5 6
ELSE                 : 7
END                  : 9
FORWARD              : 18
GOTO                 : 8
IF                   : 7
LOCATE               : 13
LPAR                 : 1 4 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
MOVE                 : 10
MOVEABS              : 14
MOVEABSH             : 22
MOVEREL              : 15
MOVETO               : 12
NIL                  : 2
NUM                  : 4 5 6 7 7 8 10 10 10 10 10 12 12 13 13 13 14 14 14 15 15 15 16 17 17 18 18 19 20 21 22 22 22 22 23 25
P                    : 1
RECALIBRATE          : 20
RPAR                 : 1 4 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
SAY                  : 11
SETLOCALIZATIONFIDELITY : 21
STOP                 : 25
STRING               : 11 16 24 25
THEN                 : 5 6 7
TURNABS              : 16
TURNREL              : 17
UNTIL                : 6
V                    : 4
VISIBLE              : 24
error                : 

Nonterminals, with rules where they appear

action               : 5 6
cnd                  : 6 7
content              : 4
program              : 0
vertex               : 1 3
vertices             : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . P LPAR vertex COMMA vertices RPAR

    P               shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> P . LPAR vertex COMMA vertices RPAR

    LPAR            shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> P LPAR . vertex COMMA vertices RPAR
    (4) vertex -> . V LPAR NUM COMMA content RPAR

    V               shift and go to state 5

    vertex                         shift and go to state 4

state 4

    (1) program -> P LPAR vertex . COMMA vertices RPAR

    COMMA           shift and go to state 6


state 5

    (4) vertex -> V . LPAR NUM COMMA content RPAR

    LPAR            shift and go to state 7


state 6

    (1) program -> P LPAR vertex COMMA . vertices RPAR
    (2) vertices -> . NIL
    (3) vertices -> . vertex CONS vertices
    (4) vertex -> . V LPAR NUM COMMA content RPAR

    NIL             shift and go to state 8
    V               shift and go to state 5

    vertex                         shift and go to state 9
    vertices                       shift and go to state 10

state 7

    (4) vertex -> V LPAR . NUM COMMA content RPAR

    NUM             shift and go to state 11


state 8

    (2) vertices -> NIL .

    RPAR            reduce using rule 2 (vertices -> NIL .)


state 9

    (3) vertices -> vertex . CONS vertices

    CONS            shift and go to state 12


state 10

    (1) program -> P LPAR vertex COMMA vertices . RPAR

    RPAR            shift and go to state 13


state 11

    (4) vertex -> V LPAR NUM . COMMA content RPAR

    COMMA           shift and go to state 14


state 12

    (3) vertices -> vertex CONS . vertices
    (2) vertices -> . NIL
    (3) vertices -> . vertex CONS vertices
    (4) vertex -> . V LPAR NUM COMMA content RPAR

    NIL             shift and go to state 8
    V               shift and go to state 5

    vertex                         shift and go to state 9
    vertices                       shift and go to state 15

state 13

    (1) program -> P LPAR vertex COMMA vertices RPAR .

    $end            reduce using rule 1 (program -> P LPAR vertex COMMA vertices RPAR .)


state 14

    (4) vertex -> V LPAR NUM COMMA . content RPAR
    (5) content -> . DO action THEN NUM
    (6) content -> . DO action UNTIL cnd THEN NUM
    (7) content -> . IF cnd THEN NUM ELSE NUM
    (8) content -> . GOTO NUM
    (9) content -> . END

    DO              shift and go to state 18
    IF              shift and go to state 20
    GOTO            shift and go to state 17
    END             shift and go to state 16

    content                        shift and go to state 19

state 15

    (3) vertices -> vertex CONS vertices .

    RPAR            reduce using rule 3 (vertices -> vertex CONS vertices .)


state 16

    (9) content -> END .

    RPAR            reduce using rule 9 (content -> END .)


state 17

    (8) content -> GOTO . NUM

    NUM             shift and go to state 21


state 18

    (5) content -> DO . action THEN NUM
    (6) content -> DO . action UNTIL cnd THEN NUM
    (10) action -> . MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR
    (11) action -> . SAY LPAR STRING RPAR
    (12) action -> . MOVETO LPAR NUM COMMA NUM RPAR
    (13) action -> . LOCATE LPAR NUM COMMA NUM COMMA NUM RPAR
    (14) action -> . MOVEABS LPAR NUM COMMA NUM COMMA NUM RPAR
    (15) action -> . MOVEREL LPAR NUM COMMA NUM COMMA NUM RPAR
    (16) action -> . TURNABS LPAR STRING COMMA NUM RPAR
    (17) action -> . TURNREL LPAR NUM COMMA NUM RPAR
    (18) action -> . FORWARD LPAR NUM COMMA NUM RPAR
    (19) action -> . CHARGE LPAR NUM RPAR
    (20) action -> . RECALIBRATE LPAR NUM RPAR
    (21) action -> . SETLOCALIZATIONFIDELITY LPAR NUM RPAR
    (22) action -> . MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR
    (23) action -> . DEADLINE LPAR NUM RPAR

    MOVE            shift and go to state 25
    SAY             shift and go to state 31
    MOVETO          shift and go to state 29
    LOCATE          shift and go to state 32
    MOVEABS         shift and go to state 24
    MOVEREL         shift and go to state 34
    TURNABS         shift and go to state 28
    TURNREL         shift and go to state 27
    FORWARD         shift and go to state 33
    CHARGE          shift and go to state 35
    RECALIBRATE     shift and go to state 30
    SETLOCALIZATIONFIDELITY shift and go to state 22
    MOVEABSH        shift and go to state 23
    DEADLINE        shift and go to state 26

    action                         shift and go to state 36

state 19

    (4) vertex -> V LPAR NUM COMMA content . RPAR

    RPAR            shift and go to state 37


state 20

    (7) content -> IF . cnd THEN NUM ELSE NUM
    (24) cnd -> . VISIBLE LPAR STRING RPAR
    (25) cnd -> . STOP LPAR NUM COMMA STRING RPAR

    VISIBLE         shift and go to state 39
    STOP            shift and go to state 38

    cnd                            shift and go to state 40

state 21

    (8) content -> GOTO NUM .

    RPAR            reduce using rule 8 (content -> GOTO NUM .)


state 22

    (21) action -> SETLOCALIZATIONFIDELITY . LPAR NUM RPAR

    LPAR            shift and go to state 41


state 23

    (22) action -> MOVEABSH . LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    LPAR            shift and go to state 42


state 24

    (14) action -> MOVEABS . LPAR NUM COMMA NUM COMMA NUM RPAR

    LPAR            shift and go to state 43


state 25

    (10) action -> MOVE . LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    LPAR            shift and go to state 44


state 26

    (23) action -> DEADLINE . LPAR NUM RPAR

    LPAR            shift and go to state 45


state 27

    (17) action -> TURNREL . LPAR NUM COMMA NUM RPAR

    LPAR            shift and go to state 46


state 28

    (16) action -> TURNABS . LPAR STRING COMMA NUM RPAR

    LPAR            shift and go to state 47


state 29

    (12) action -> MOVETO . LPAR NUM COMMA NUM RPAR

    LPAR            shift and go to state 48


state 30

    (20) action -> RECALIBRATE . LPAR NUM RPAR

    LPAR            shift and go to state 49


state 31

    (11) action -> SAY . LPAR STRING RPAR

    LPAR            shift and go to state 50


state 32

    (13) action -> LOCATE . LPAR NUM COMMA NUM COMMA NUM RPAR

    LPAR            shift and go to state 51


state 33

    (18) action -> FORWARD . LPAR NUM COMMA NUM RPAR

    LPAR            shift and go to state 52


state 34

    (15) action -> MOVEREL . LPAR NUM COMMA NUM COMMA NUM RPAR

    LPAR            shift and go to state 53


state 35

    (19) action -> CHARGE . LPAR NUM RPAR

    LPAR            shift and go to state 54


state 36

    (5) content -> DO action . THEN NUM
    (6) content -> DO action . UNTIL cnd THEN NUM

    THEN            shift and go to state 55
    UNTIL           shift and go to state 56


state 37

    (4) vertex -> V LPAR NUM COMMA content RPAR .

    COMMA           reduce using rule 4 (vertex -> V LPAR NUM COMMA content RPAR .)
    CONS            reduce using rule 4 (vertex -> V LPAR NUM COMMA content RPAR .)


state 38

    (25) cnd -> STOP . LPAR NUM COMMA STRING RPAR

    LPAR            shift and go to state 57


state 39

    (24) cnd -> VISIBLE . LPAR STRING RPAR

    LPAR            shift and go to state 58


state 40

    (7) content -> IF cnd . THEN NUM ELSE NUM

    THEN            shift and go to state 59


state 41

    (21) action -> SETLOCALIZATIONFIDELITY LPAR . NUM RPAR

    NUM             shift and go to state 60


state 42

    (22) action -> MOVEABSH LPAR . NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 61


state 43

    (14) action -> MOVEABS LPAR . NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 62


state 44

    (10) action -> MOVE LPAR . NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 63


state 45

    (23) action -> DEADLINE LPAR . NUM RPAR

    NUM             shift and go to state 64


state 46

    (17) action -> TURNREL LPAR . NUM COMMA NUM RPAR

    NUM             shift and go to state 65


state 47

    (16) action -> TURNABS LPAR . STRING COMMA NUM RPAR

    STRING          shift and go to state 66


state 48

    (12) action -> MOVETO LPAR . NUM COMMA NUM RPAR

    NUM             shift and go to state 67


state 49

    (20) action -> RECALIBRATE LPAR . NUM RPAR

    NUM             shift and go to state 68


state 50

    (11) action -> SAY LPAR . STRING RPAR

    STRING          shift and go to state 69


state 51

    (13) action -> LOCATE LPAR . NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 70


state 52

    (18) action -> FORWARD LPAR . NUM COMMA NUM RPAR

    NUM             shift and go to state 71


state 53

    (15) action -> MOVEREL LPAR . NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 72


state 54

    (19) action -> CHARGE LPAR . NUM RPAR

    NUM             shift and go to state 73


state 55

    (5) content -> DO action THEN . NUM

    NUM             shift and go to state 74


state 56

    (6) content -> DO action UNTIL . cnd THEN NUM
    (24) cnd -> . VISIBLE LPAR STRING RPAR
    (25) cnd -> . STOP LPAR NUM COMMA STRING RPAR

    VISIBLE         shift and go to state 39
    STOP            shift and go to state 38

    cnd                            shift and go to state 75

state 57

    (25) cnd -> STOP LPAR . NUM COMMA STRING RPAR

    NUM             shift and go to state 76


state 58

    (24) cnd -> VISIBLE LPAR . STRING RPAR

    STRING          shift and go to state 77


state 59

    (7) content -> IF cnd THEN . NUM ELSE NUM

    NUM             shift and go to state 78


state 60

    (21) action -> SETLOCALIZATIONFIDELITY LPAR NUM . RPAR

    RPAR            shift and go to state 79


state 61

    (22) action -> MOVEABSH LPAR NUM . COMMA NUM COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 80


state 62

    (14) action -> MOVEABS LPAR NUM . COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 81


state 63

    (10) action -> MOVE LPAR NUM . COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 82


state 64

    (23) action -> DEADLINE LPAR NUM . RPAR

    RPAR            shift and go to state 83


state 65

    (17) action -> TURNREL LPAR NUM . COMMA NUM RPAR

    COMMA           shift and go to state 84


state 66

    (16) action -> TURNABS LPAR STRING . COMMA NUM RPAR

    COMMA           shift and go to state 85


state 67

    (12) action -> MOVETO LPAR NUM . COMMA NUM RPAR

    COMMA           shift and go to state 86


state 68

    (20) action -> RECALIBRATE LPAR NUM . RPAR

    RPAR            shift and go to state 87


state 69

    (11) action -> SAY LPAR STRING . RPAR

    RPAR            shift and go to state 88


state 70

    (13) action -> LOCATE LPAR NUM . COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 89


state 71

    (18) action -> FORWARD LPAR NUM . COMMA NUM RPAR

    COMMA           shift and go to state 90


state 72

    (15) action -> MOVEREL LPAR NUM . COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 91


state 73

    (19) action -> CHARGE LPAR NUM . RPAR

    RPAR            shift and go to state 92


state 74

    (5) content -> DO action THEN NUM .

    RPAR            reduce using rule 5 (content -> DO action THEN NUM .)


state 75

    (6) content -> DO action UNTIL cnd . THEN NUM

    THEN            shift and go to state 93


state 76

    (25) cnd -> STOP LPAR NUM . COMMA STRING RPAR

    COMMA           shift and go to state 94


state 77

    (24) cnd -> VISIBLE LPAR STRING . RPAR

    RPAR            shift and go to state 95


state 78

    (7) content -> IF cnd THEN NUM . ELSE NUM

    ELSE            shift and go to state 96


state 79

    (21) action -> SETLOCALIZATIONFIDELITY LPAR NUM RPAR .

    THEN            reduce using rule 21 (action -> SETLOCALIZATIONFIDELITY LPAR NUM RPAR .)
    UNTIL           reduce using rule 21 (action -> SETLOCALIZATIONFIDELITY LPAR NUM RPAR .)


state 80

    (22) action -> MOVEABSH LPAR NUM COMMA . NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 97


state 81

    (14) action -> MOVEABS LPAR NUM COMMA . NUM COMMA NUM RPAR

    NUM             shift and go to state 98


state 82

    (10) action -> MOVE LPAR NUM COMMA . NUM COMMA NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 99


state 83

    (23) action -> DEADLINE LPAR NUM RPAR .

    THEN            reduce using rule 23 (action -> DEADLINE LPAR NUM RPAR .)
    UNTIL           reduce using rule 23 (action -> DEADLINE LPAR NUM RPAR .)


state 84

    (17) action -> TURNREL LPAR NUM COMMA . NUM RPAR

    NUM             shift and go to state 100


state 85

    (16) action -> TURNABS LPAR STRING COMMA . NUM RPAR

    NUM             shift and go to state 101


state 86

    (12) action -> MOVETO LPAR NUM COMMA . NUM RPAR

    NUM             shift and go to state 102


state 87

    (20) action -> RECALIBRATE LPAR NUM RPAR .

    THEN            reduce using rule 20 (action -> RECALIBRATE LPAR NUM RPAR .)
    UNTIL           reduce using rule 20 (action -> RECALIBRATE LPAR NUM RPAR .)


state 88

    (11) action -> SAY LPAR STRING RPAR .

    THEN            reduce using rule 11 (action -> SAY LPAR STRING RPAR .)
    UNTIL           reduce using rule 11 (action -> SAY LPAR STRING RPAR .)


state 89

    (13) action -> LOCATE LPAR NUM COMMA . NUM COMMA NUM RPAR

    NUM             shift and go to state 103


state 90

    (18) action -> FORWARD LPAR NUM COMMA . NUM RPAR

    NUM             shift and go to state 104


state 91

    (15) action -> MOVEREL LPAR NUM COMMA . NUM COMMA NUM RPAR

    NUM             shift and go to state 105


state 92

    (19) action -> CHARGE LPAR NUM RPAR .

    THEN            reduce using rule 19 (action -> CHARGE LPAR NUM RPAR .)
    UNTIL           reduce using rule 19 (action -> CHARGE LPAR NUM RPAR .)


state 93

    (6) content -> DO action UNTIL cnd THEN . NUM

    NUM             shift and go to state 106


state 94

    (25) cnd -> STOP LPAR NUM COMMA . STRING RPAR

    STRING          shift and go to state 107


state 95

    (24) cnd -> VISIBLE LPAR STRING RPAR .

    THEN            reduce using rule 24 (cnd -> VISIBLE LPAR STRING RPAR .)


state 96

    (7) content -> IF cnd THEN NUM ELSE . NUM

    NUM             shift and go to state 108


state 97

    (22) action -> MOVEABSH LPAR NUM COMMA NUM . COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 109


state 98

    (14) action -> MOVEABS LPAR NUM COMMA NUM . COMMA NUM RPAR

    COMMA           shift and go to state 110


state 99

    (10) action -> MOVE LPAR NUM COMMA NUM . COMMA NUM COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 111


state 100

    (17) action -> TURNREL LPAR NUM COMMA NUM . RPAR

    RPAR            shift and go to state 112


state 101

    (16) action -> TURNABS LPAR STRING COMMA NUM . RPAR

    RPAR            shift and go to state 113


state 102

    (12) action -> MOVETO LPAR NUM COMMA NUM . RPAR

    RPAR            shift and go to state 114


state 103

    (13) action -> LOCATE LPAR NUM COMMA NUM . COMMA NUM RPAR

    COMMA           shift and go to state 115


state 104

    (18) action -> FORWARD LPAR NUM COMMA NUM . RPAR

    RPAR            shift and go to state 116


state 105

    (15) action -> MOVEREL LPAR NUM COMMA NUM . COMMA NUM RPAR

    COMMA           shift and go to state 117


state 106

    (6) content -> DO action UNTIL cnd THEN NUM .

    RPAR            reduce using rule 6 (content -> DO action UNTIL cnd THEN NUM .)


state 107

    (25) cnd -> STOP LPAR NUM COMMA STRING . RPAR

    RPAR            shift and go to state 118


state 108

    (7) content -> IF cnd THEN NUM ELSE NUM .

    RPAR            reduce using rule 7 (content -> IF cnd THEN NUM ELSE NUM .)


state 109

    (22) action -> MOVEABSH LPAR NUM COMMA NUM COMMA . NUM COMMA NUM RPAR

    NUM             shift and go to state 119


state 110

    (14) action -> MOVEABS LPAR NUM COMMA NUM COMMA . NUM RPAR

    NUM             shift and go to state 120


state 111

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA . NUM COMMA NUM COMMA NUM RPAR

    NUM             shift and go to state 121


state 112

    (17) action -> TURNREL LPAR NUM COMMA NUM RPAR .

    THEN            reduce using rule 17 (action -> TURNREL LPAR NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 17 (action -> TURNREL LPAR NUM COMMA NUM RPAR .)


state 113

    (16) action -> TURNABS LPAR STRING COMMA NUM RPAR .

    THEN            reduce using rule 16 (action -> TURNABS LPAR STRING COMMA NUM RPAR .)
    UNTIL           reduce using rule 16 (action -> TURNABS LPAR STRING COMMA NUM RPAR .)


state 114

    (12) action -> MOVETO LPAR NUM COMMA NUM RPAR .

    THEN            reduce using rule 12 (action -> MOVETO LPAR NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 12 (action -> MOVETO LPAR NUM COMMA NUM RPAR .)


state 115

    (13) action -> LOCATE LPAR NUM COMMA NUM COMMA . NUM RPAR

    NUM             shift and go to state 122


state 116

    (18) action -> FORWARD LPAR NUM COMMA NUM RPAR .

    THEN            reduce using rule 18 (action -> FORWARD LPAR NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 18 (action -> FORWARD LPAR NUM COMMA NUM RPAR .)


state 117

    (15) action -> MOVEREL LPAR NUM COMMA NUM COMMA . NUM RPAR

    NUM             shift and go to state 123


state 118

    (25) cnd -> STOP LPAR NUM COMMA STRING RPAR .

    THEN            reduce using rule 25 (cnd -> STOP LPAR NUM COMMA STRING RPAR .)


state 119

    (22) action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM . COMMA NUM RPAR

    COMMA           shift and go to state 124


state 120

    (14) action -> MOVEABS LPAR NUM COMMA NUM COMMA NUM . RPAR

    RPAR            shift and go to state 125


state 121

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM . COMMA NUM COMMA NUM RPAR

    COMMA           shift and go to state 126


state 122

    (13) action -> LOCATE LPAR NUM COMMA NUM COMMA NUM . RPAR

    RPAR            shift and go to state 127


state 123

    (15) action -> MOVEREL LPAR NUM COMMA NUM COMMA NUM . RPAR

    RPAR            shift and go to state 128


state 124

    (22) action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA . NUM RPAR

    NUM             shift and go to state 129


state 125

    (14) action -> MOVEABS LPAR NUM COMMA NUM COMMA NUM RPAR .

    THEN            reduce using rule 14 (action -> MOVEABS LPAR NUM COMMA NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 14 (action -> MOVEABS LPAR NUM COMMA NUM COMMA NUM RPAR .)


state 126

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA . NUM COMMA NUM RPAR

    NUM             shift and go to state 130


state 127

    (13) action -> LOCATE LPAR NUM COMMA NUM COMMA NUM RPAR .

    THEN            reduce using rule 13 (action -> LOCATE LPAR NUM COMMA NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 13 (action -> LOCATE LPAR NUM COMMA NUM COMMA NUM RPAR .)


state 128

    (15) action -> MOVEREL LPAR NUM COMMA NUM COMMA NUM RPAR .

    THEN            reduce using rule 15 (action -> MOVEREL LPAR NUM COMMA NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 15 (action -> MOVEREL LPAR NUM COMMA NUM COMMA NUM RPAR .)


state 129

    (22) action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM . RPAR

    RPAR            shift and go to state 131


state 130

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM . COMMA NUM RPAR

    COMMA           shift and go to state 132


state 131

    (22) action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR .

    THEN            reduce using rule 22 (action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 22 (action -> MOVEABSH LPAR NUM COMMA NUM COMMA NUM COMMA NUM RPAR .)


state 132

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA . NUM RPAR

    NUM             shift and go to state 133


state 133

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM . RPAR

    RPAR            shift and go to state 134


state 134

    (10) action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR .

    THEN            reduce using rule 10 (action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR .)
    UNTIL           reduce using rule 10 (action -> MOVE LPAR NUM COMMA NUM COMMA NUM COMMA NUM COMMA NUM RPAR .)

